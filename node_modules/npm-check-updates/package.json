{
  "name": "npm-check-updates",
  "version": "1.2.0",
  "author": {
    "name": "Tomas Junnonen",
    "email": "tomas1@gmail.com"
  },
  "description": "Find newer versions of dependencies than what your package.json allows",
  "keywords": [
    "npm",
    "check",
    "find",
    "discover",
    "updates",
    "upgrades",
    "dependencies",
    "package.json",
    "updater",
    "version",
    "management"
  ],
  "dependencies": {
    "npm": "1.3.x",
    "commander": "2.0.x",
    "async": "0.2.x",
    "read-package-json": "1.1.x",
    "semver": "2.2.x"
  },
  "main": "./lib/npm-check-updates",
  "bin": {
    "npm-check-updates": "./bin/npm-check-updates"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tjunnone/npm-check-updates.git"
  },
  "homepage": "https://github.com/tjunnone/npm-check-updates",
  "readme": "npm-check-updates\n=================\n\nnpm-check-updates is a tool that allows you to **find all updates to\ndependencies** in your Node.js project, regardless of any version\nconstraints in your package.json file (unlike npm itself).\n\nOptionally, npm-check-updates can also upgrade your package.json file to\nsatisfy the latest available versions, all while **maintaining your\nexisting semantic versioning policies**.\n\nPut plainly, it will upgrade your \"express\": \"3.3.x\" dependency to\n\"express\": \"3.4.x\" when express 3.4.0 hits the scene.\n\nnpm-check-updates can also show you all available **updates to your globally\ninstalled packages**.\n\nMotivation\n--------------\n\n[Package.json best practices](http://blog.nodejitsu.com/package-dependencies-done-right)\nrecommends maintaining dependencies using a [semantic versioning](http://semver.org/)\npolicy. In practice you do this by specifying a \"1.2.x\" style dependency\nin your package.json, whereby patch-level updates are automatically allowed\nbut major and minor releases require manual verification.\n\nUnfortunately, it then becomes your responsibility to find out about new\npackage releases, for example by using \"npm info\" command one package at a time,\nor by visiting project pages.\n\nWhatever your versioning policy, npm-check-updates will make keeping your\ndependencies up to date a breeze.\n\n\nInstallation\n--------------\n\n```\nnpm install -g npm-check-updates\n```\n\nExamples\n--------------\n\nShow any new dependencies for the project in the current directory:\n```\n$ npm-check-updates\n\n\"connect\" can be updated from 2.8.x to 2.11.x  (Installed: 2.8.8, Latest: 2.11.0)\n\"commander\" can be updated from 1.3.x to 2.0.x (Installed: 1.3.2, Latest: 2.0.0)\n\nRun 'npm-check-updates -u' to upgrade your package.json automatically\n```\n\nCheck global npm packages for updates:\n```\n$ npm-check-updates -g\n\n\"mocha\" can be updated to version 1.12.1\n```\n\nUpgrade a project's package.json:\n```\n$ npm-check-updates -u\n\n\"request\" can be updated from 2.20.x to 2.27.x (Installed: 2.20.0, Latest: 2.27.1)\n\npackage.json upgraded\n```\n\nNow simply perform the usual \"npm update\" and verify that your project\nworks with the upgraded versions.\n\nHistory\n--------------\n\n- 1.2\n  - Print currently installed and latest package version in addition to semantic versions\n  - Fixed bug where extra whitespace in package.json may prevent automatic upgrade\n- 1.1\n  - Added option to check global packages for updates: -g switch\n  - Now also checks and upgrades devDependencies in package.json\n- 1.0\n  - Find and upgrade dependencies maintaining existing versioning policy in package.json\n\nHow dependency updates are determined\n--------------\n\n- Direct dependencies will be increased to the latest available version:\n  - 2.0.1 => 2.2.0\n  - 1.2 => 1.3\n-  Semantic versioning policies for levels are maintained while satisfying the latest version:\n  - 1.2.x => 1.3.x\n  - 1.x => 2.x\n- \"Any version\" is maintained:\n  - \\* => \\*\n- Version constraints are maintained:\n  - \\>0.2.x => \\> 0.3.x\n  - \\>=1.0.0 => >=1.1.0\n- Dependencies newer than the latest available version are suggested to be downgraded, as it's likely a mistake:\n  - 2.0.x => 1.7.x, when 1.7.10 is the latest available version\n  - 1.1.0 => 1.0.1, when 1.0.1 is the latest available version\n\nProblems?\n--------------\n\nPlease [file an issue on github](https://github.com/tjunnone/npm-check-updates/issues).\nPull requests are welcome :)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tjunnone/npm-check-updates/issues"
  },
  "_id": "npm-check-updates@1.2.0",
  "_shasum": "9e055cdc4a6fad8043bb95adf23eb74f5718c3ec",
  "_from": "npm-check-updates@",
  "_resolved": "https://registry.npmjs.org/npm-check-updates/-/npm-check-updates-1.2.0.tgz"
}
